{"ast":null,"code":"// ChatGPTService.ts\n\nimport fetch from 'cross-fetch';\n\n// ChatGPT API'nin bulunduğu URL\nconst API_URL = 'https://api.openai.com/v1/completions';\n\n// ChatGPT API'ye erişim anahtarınız\nconst API_KEY = 'sk-proj-2lYK2OlwFsGsrH3EsZclT3BlbkFJcpgcnmaBpdFbubKvoKAp';\n\n// ChatGPT'ye soru gönderen fonksiyon\nexport const createChatResponse = async question => {\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${API_KEY}`\n      },\n      body: JSON.stringify({\n        model: '/v1/models',\n        // Kullanılacak ChatGPT modeli\n        prompt: question,\n        // Kullanıcının sorduğu soru\n        max_tokens: 50,\n        // Oluşturulacak cevabın maksimum token sayısı\n        temperature: 0.7,\n        // Daha yaratıcı cevaplar için sıcaklık parametresi\n        stop: ['\\n', '<|endoftext|>'] // Cevabın sonlandırılacağı koşullar\n      })\n    });\n    const data = await response.json();\n    return data.choices[0].text.trim(); // Cevabı döndür\n  } catch (error) {\n    console.error('ChatGPT API error:', error);\n    throw new Error('Failed to fetch chat response');\n  }\n};","map":{"version":3,"names":["fetch","API_URL","API_KEY","createChatResponse","question","response","method","headers","body","JSON","stringify","model","prompt","max_tokens","temperature","stop","data","json","choices","text","trim","error","console","Error"],"sources":["C:/Users/90546/Documents/GitHub/AIProject/my-app/src/ChatGPTService.ts"],"sourcesContent":["// ChatGPTService.ts\r\n\r\nimport fetch from 'cross-fetch';\r\n\r\n// ChatGPT API'nin bulunduğu URL\r\nconst API_URL = 'https://api.openai.com/v1/completions';\r\n\r\n// ChatGPT API'ye erişim anahtarınız\r\nconst API_KEY = 'sk-proj-2lYK2OlwFsGsrH3EsZclT3BlbkFJcpgcnmaBpdFbubKvoKAp';\r\n\r\n// ChatGPT'ye soru gönderen fonksiyon\r\nexport const createChatResponse = async (question: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${API_KEY}`\r\n      },\r\n      body: JSON.stringify({\r\n        model: '/v1/models', // Kullanılacak ChatGPT modeli\r\n        prompt: question, // Kullanıcının sorduğu soru\r\n        max_tokens: 50, // Oluşturulacak cevabın maksimum token sayısı\r\n        temperature: 0.7, // Daha yaratıcı cevaplar için sıcaklık parametresi\r\n        stop: ['\\n', '<|endoftext|>'] // Cevabın sonlandırılacağı koşullar\r\n      })\r\n    });\r\n\r\n    const data = await response.json();\r\n    return data.choices[0].text.trim(); // Cevabı döndür\r\n  } catch (error) {\r\n    console.error('ChatGPT API error:', error);\r\n    throw new Error('Failed to fetch chat response');\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,aAAa;;AAE/B;AACA,MAAMC,OAAO,GAAG,uCAAuC;;AAEvD;AACA,MAAMC,OAAO,GAAG,0DAA0D;;AAE1E;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,QAAgB,IAAsB;EAC7E,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACC,OAAO,EAAE;MACpCK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASL,OAAQ;MACrC,CAAC;MACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,YAAY;QAAE;QACrBC,MAAM,EAAER,QAAQ;QAAE;QAClBS,UAAU,EAAE,EAAE;QAAE;QAChBC,WAAW,EAAE,GAAG;QAAE;QAClBC,IAAI,EAAE,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;MAChC,CAAC;IACH,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}